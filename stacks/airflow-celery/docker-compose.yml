version: '3.6'
services:
  postgres:
    environment:
      - PGDATA=${PGDATA:?PGDATA}
      - POSTGRES_DB=${POSTGRES_DB:?POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER:?POSTGRES_USER}
    image: postgres:11
    networks:
      - default
    restart: unless-stopped
    volumes:
      - airflow-pgdata:/var/lib/postgresql/data

  redis:
    command: redis-server --requirepass ${REDIS_PASSWORD:?REDIS_PASSWORD}
    image: redis:5
    networks:
      - default
    restart: unless-stopped

  webserver:
    build: ${REL_HOST_PATH:?REL_HOST_PATH}/src
    depends_on:
      - postgres
      - redis
    entrypoint: ./entrypoint.sh run
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=${AIRFLOW__CORE__DAGS_FOLDER:?AIRFLOW__CORE__DAGS_FOLDER}
      - AIRFLOW__CORE__EXECUTOR=${AIRFLOW__CORE__EXECUTOR:?AIRFLOW__CORE__EXECUTOR}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY:?AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=${AIRFLOW__CORE__LOAD_EXAMPLES:?AIRFLOW__CORE__LOAD_EXAMPLES}
      - AIRFLOW_PASSWORD=${AIRFLOW_PASSWORD:?AIRFLOW_PASSWORD}
      - AIRFLOW_USER=${AIRFLOW_USER:?AIRFLOW_USER}
      - AIRFLOW__WEBSERVER__AUTH_BACKEND=${AIRFLOW__WEBSERVER__AUTH_BACKEND:?AIRFLOW__WEBSERVER__AUTH_BACKEND}
      - AIRFLOW__WEBSERVER__AUTHENTICATE=${AIRFLOW__WEBSERVER__AUTHENTICATE:?AIRFLOW__WEBSERVER__AUTHENTICATE}
      - AIRFLOW__WEBSERVER__BASE_URL=${AIRFLOW__WEBSERVER__BASE_URL:?AIRFLOW__WEBSERVER__BASE_URL}
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=${AIRFLOW__WEBSERVER__WEB_SERVER_PORT:?AIRFLOW__WEBSERVER__WEB_SERVER_PORT}
      - POSTGRES_DB=${POSTGRES_DB:?POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST:?POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT:?POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER:?POSTGRES_USER}
      - REDIS_HOST=${REDIS_HOST:?REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD:?REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT:?REDIS_PORT}
    healthcheck:
      test: curl -sfk ${AIRFLOW__WEBSERVER__BASE_URL:?AIRFLOW__WEBSERVER__BASE_URL}/health | grep healthy
      interval: 60s
      timeout: 60s
      retries: 3
    image: airflow:1.10.3
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:?TRAEFIK_ENABLE}
      - traefik.frontend.auth.basic=${TRAEFIK_AUTH_BASIC:?TRAEFIK_AUTH_BASIC}
      - traefik.frontend.rule=Host:${TRAEFIK_DOMAIN:?TRAEFIK_DOMAIN}
      - traefik.port=${AIRFLOW__WEBSERVER__WEB_SERVER_PORT:?AIRFLOW__WEBSERVER__WEB_SERVER_PORT}
    networks:
      - default
    ports:
      - ${AIRFLOW_HOST_PORT:?AIRFLOW_HOST_PORT}:${AIRFLOW__WEBSERVER__WEB_SERVER_PORT:?AIRFLOW__WEBSERVER__WEB_SERVER_PORT}
    restart: unless-stopped
    volumes:
      - ${REL_HOST_PATH:?REL_HOST_PATH}/dags:${AIRFLOW__CORE__DAGS_FOLDER:?AIRFLOW__CORE__DAGS_FOLDER}

volumes:
  airflow-pgdata:
