version: '3.6'
services:
  flower:
    depends_on:
      - webserver
      - postgres
      - redis
    #entrypoint: ./entrypoint.sh airflow flower --basic_auth ${AIRFLOW__FLOWER__AUTH}
    entrypoint: ./entrypoint.sh airflow flower
    image: airflow:local
    ports:
      - 5555:5555
    volumes:
      - airflow-conf:/airflow

  scheduler:
    depends_on:
      - webserver
      - postgres
      - redis
    entrypoint: ./entrypoint.sh airflow scheduler
    image: airflow:local
    volumes:
      - ../../dags:/dags
      - airflow-conf:/airflow

  webserver:
    depends_on:
      - postgres
      - redis
    deploy:
      labels:
        - traefik.docker.network=public-network
        - traefik.enable=true
        - traefik.frontend.rule=Host:${AIRFLOW__TRAEFIK__URL:?AIRFLOW__TRAEFIK__URL}
        - traefik.port=8080
        - traefik.tags=public-network
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.frontend.auth.basic.users=${AIRFLOW__TRAEFIK__AUTH:?AIRFLOW__TRAEFIK__AUTH}
        - traefik.webservice.frontend.entryPoints=https
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      replicas: 1
    entrypoint: ./entrypoint.sh airflow webserver
    environment:
      - AIRFLOW__CELERY__BROKER_URL=${AIRFLOW__URI__REDIS:?AIRFLOW__URI__REDIS}
      - AIRFLOW__CELERY__RESULT_BACKEND=${AIRFLOW__URI__DB_POSTGRESQL:?AIRFLOW__URI__DB_POSTGRESQL}
      - AIRFLOW__CORE__DAGS_FOLDER=/dags
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__MAIN__FERNET_KEY:?AIRFLOW__MAIN__FERNET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__URI__POSTGRESQL_PSYCOPG2:?AIRFLOW__URI__POSTGRESQL_PSYCOPG2}
      - AIRFLOW__WEBSERVER__BASE_URL=http://0.0.0.0:8080
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
      # login configuration
      #- AIRFLOW_PASSWORD=${AIRFLOW__MAIN__PASSWORD:?AIRFLOW__MAIN__PASSWORD}
      #- AIRFLOW_USER=${AIRFLOW__MAIN__USER:?AIRFLOW__MAIN__USER}
      #- AIRFLOW__WEBSERVER__AUTH_BACKEND=airflow.contrib.auth.backends.password_auth
      #- AIRFLOW__WEBSERVER__AUTHENTICATE=true
    healthcheck:
      interval: 30s
      retries: 3
      test: curl -sfk http://0.0.0.0:8080/health | grep healthy
      timeout: 30s
    image: airflow:local
    networks:
      - default
      - public-network
    ports:
      - 8080:8080
    volumes:
      - ../../dags:/dags
      - airflow-conf:/airflow

  worker:
    depends_on:
      - webserver
      - postgres
      - redis
    entrypoint: ./entrypoint.sh airflow worker
    image: airflow:local
    restart: unless-stopped
    volumes:
      - ../../dags:/dags
      - airflow-conf:/airflow

networks:
  public-network:
    external: true

volumes:
  airflow-pgdata:
  airflow-conf:
