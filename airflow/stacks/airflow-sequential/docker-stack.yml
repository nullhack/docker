version: '3.6'

services:
  webserver:
    deploy:
      labels:
        - traefik.docker.network=airflow_public_network
        - traefik.enable=true
        - traefik.frontend.rule=Host:${AIRFLOW__TRAEFIK__URL:?AIRFLOW__TRAEFIK__URL}
        - traefik.port=8080
        - traefik.tags=public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.frontend.auth.basic.users=${AIRFLOW__TRAEFIK__AUTH:?AIRFLOW__TRAEFIK__AUTH}
        - traefik.webservice.frontend.entryPoints=https
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      replicas: 1
    entrypoint: ./entrypoint.sh run
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/dags
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__MAIN__FERNET_KEY:?AIRFLOW__MAIN__FERNET_KEY}
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__BASE_URL=http://0.0.0.0:8080
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
    healthcheck:
      interval: 30s
      retries: 3
      test: curl -sfk http://0.0.0.0:8080/health | grep healthy
      timeout: 30s
    image: airflow:local
    networks:
      - airflow_public_network
    ports:
      - 8080
    volumes:
      - ../../dags:/dags
      - airflow-conf:/airflow

networks:
  airflow_public_network:
    external: true

volumes:
  airflow-pgdata:
  airflow-conf:
